"""

âœ… ðŸ”¥ GIT & GITHUB FULL MODULE LIST (Tanglish Style â€“ Spoonfeeding)

âœ… Git & GitHub Full Course - Module List (No Table, Just Step-by-Step)
(Total: 20 Modules, Each one detailed ah irukum â€“ no step skip agathu)

ðŸ”¥ MODULE 1: Introduction to Git & GitHub
Git-na enna?

GitHub-na enna?

Real-time example: Team la project work panradhu without confusion

Version control-na enna?

Why Git popular?

Story: Time machine for code â€“ commit history track panni, edha venumnaalum revert panlaam

ðŸ”¥ MODULE 2: Git Installation & Configuration
Git install panrathu (Windows, Mac, Linux)

git --version check

First-time user config:

bash
Copy
Edit
git config --global user.name "Unga Name"
git config --global user.email "ungamail@example.com"
Check settings: git config --list

ðŸ”¥ MODULE 3: Git Basics â€“ init, add, commit, status
Git repo create: git init

File add to staging: git add filename

Save snapshot: git commit -m "message"

Status check: git status

Real-time example: Resume prepare panni commit panradhu version-a save panradhu maari

ðŸ”¥ MODULE 4: Git File Lifecycle â€“ Working Dir âž¡ Staging âž¡ Commit
3 zone iruku:

Working Directory (actual files)

Staging Area (prepare panra files)

Git Repository (commit pannadhudhaan)

Command flow:

git add âž¡ git commit

Real-time story: Pasanga project la edit panra files laam final ah commit aagara level

ðŸ”¥ MODULE 5: Viewing Changes â€“ git diff, git log
Difference pakardhu: git diff

History pakardhu: git log

git log --oneline for simple view

Real-time example: Team member yaar enna change pannirukaanga-nu trace panradhu

ðŸ”¥ MODULE 6: Branching & Merging
git branch â€“ list branches

git branch new-feature

git checkout new-feature

git merge main â€“ merge branch

Merge conflict-na enna? Epdi resolve panrathu?

Story: Parallel ah 2 teammates work panni final-a merge panradhu

ðŸ”¥ MODULE 7: Undoing Changes â€“ reset, revert, checkout
git reset â€“ go back

git revert â€“ undo commit safely

git checkout â€“ restore file

Real-time mistake: Wrong file commit pannadhukku fix

ðŸ”¥ MODULE 8: GitHub Setup
GitHub account create panrathu

Repo create panrathu (public/private)

Local repo connect:

bash
Copy
Edit
git remote add origin https://github.com/username/repo.git  
git push -u origin main
ðŸ”¥ MODULE 9: Git Remote Commands
git clone â€“ copy repo from GitHub

git push â€“ upload changes

git pull â€“ get latest changes

git fetch â€“ fetch without merge

ðŸ”¥ MODULE 10: GitHub Collaboration â€“ Fork, PR, Review
Fork use case

Pull Request flow

Code Review process

Real-time story: Open Source contribute panrathu

ðŸ”¥ MODULE 11: Ignoring Files â€“ .gitignore
.gitignore file create panradhu

Common ignore: .env, node_modules, *.pyc

ðŸ”¥ MODULE 12: Git Tags
Tag create: git tag v1.0

Annotated tag: git tag -a v1.0 -m "First Release"

Push tag: git push origin v1.0

ðŸ”¥ MODULE 13: Stashing â€“ Temporary Save
git stash â€“ temporary ah save

git stash list â€“ view all

git stash apply â€“ restore

ðŸ”¥ MODULE 14: Rebase vs Merge
git merge â€“ easy, extra commits

git rebase â€“ clean history

Real-time example: Clean commit history maintain panrathu before push

ðŸ”¥ MODULE 15: Git Reflog
git reflog â€“ lost commit retrieve

Life-saving tip after hard reset or wrong delete

ðŸ”¥ MODULE 16: Git Aliases
Command shortcut:

bash
Copy
Edit
git config --global alias.st status
git config --global alias.cm "commit -m"
ðŸ”¥ MODULE 17: Git Internals (Advanced)
Object types: blob, tree, commit

SHA-1 Hash system

How git tracks everything

ðŸ”¥ MODULE 18: GitHub Actions (CI/CD)
Automation with workflows

.github/workflows/main.yml â€“ auto test, deploy

ðŸ”¥ MODULE 19: Security Best Practices
GPG commit signing

Token-based auth instead of password

Secrets management in CI

ðŸ”¥ MODULE 20: Real-Time Project with Git & GitHub
Resume or Portfolio Site

Track changes with Git

Push to GitHub

Collaborate with Pull Requests


"""